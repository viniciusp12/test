# Por√£o Anti-Ransomware

üõ°Ô∏è **Uma ferramenta robusta de defesa contra ransomware para ambientes Windows**

O **Por√£o Anti-Ransomware** √© uma solu√ß√£o de seguran√ßa desenvolvida em Python, projetada para proteger sistemas Windows contra ataques de ransomware por meio de uma abordagem de **Defesa em Profundidade H√≠brida**. A ferramenta combina vigil√¢ncia proativa para identificar amea√ßas antes que elas atuem e detec√ß√£o reativa para responder instantaneamente a atividades suspeitas no sistema de arquivos.

---

## üìñ Sobre o Projeto

O Por√£o Anti-Ransomware utiliza t√©cnicas avan√ßadas, como monitoramento de processos, an√°lise de entropia, verifica√ß√£o de hashes em bancos de dados de malware, regras YARA e arquivos "isca" (canary files) para oferecer uma prote√ß√£o multicamadas contra ransomwares. A ferramenta √© acompanhada por uma interface gr√°fica intuitiva, constru√≠da com CustomTkinter, que exibe estat√≠sticas em tempo real, logs de atividades e arquivos em quarentena.

### ‚ú® Principais Funcionalidades

- **Monitoramento Proativo**: Utiliza a biblioteca `psutil` para monitorar processos rec√©m-criados em alta frequ√™ncia (20 vezes por segundo), neutralizando amea√ßas no "segundo zero".
- **Detec√ß√£o Reativa**: Emprega a biblioteca `watchdog` para reagir a eventos de sistema de arquivos (cria√ß√£o, modifica√ß√£o, exclus√£o) em tempo real.
- **An√°lise de Entropia**: Calcula a entropia de arquivos modificados para detectar padr√µes de criptografia, um forte indicativo de ransomware.
- **Verifica√ß√£o de Hash (Malware DB)**: Gera hashes SHA256 de execut√°veis e consulta a API do MalwareBazaar para identificar malwares conhecidos.
- **Scanner YARA**: Escaneia arquivos com regras YARA personalizadas para detectar fam√≠lias de malware e padr√µes maliciosos.
- **Arquivos "Isca" (Canary Files)**: Protege arquivos estrat√©gicos que, ao serem modificados, acionam alertas e neutralizam amea√ßas imediatamente.
- **Quarentena Segura**: Isola arquivos maliciosos e seus execut√°veis em um diret√≥rio protegido por senha.
- **Interface Gr√°fica**: Interface moderna com CustomTkinter, exibindo estat√≠sticas, logs e arquivos em quarentena.

---

## üõ†Ô∏è Tecnologias Utilizadas

- **Linguagem**: Python 3.8+
- **Interface Gr√°fica**: CustomTkinter
- **Monitoramento de Processos**: `psutil`
- **Monitoramento de Arquivos**: `watchdog`
- **An√°lise de Malware**: `yara-python`, `requests`
- **Manipula√ß√£o de Strings**: `regex`

---

## üì¶ Pr√©-requisitos

- **Sistema Operacional**: Windows 10 ou superior
- **Python**: 3.8+ (adicionado ao PATH do sistema)
- **Permiss√µes**: Necess√°rio executar com privil√©gios de Administrador

---

## üì• Instala√ß√£o

1. **Clone o reposit√≥rio** (ou baixe o ZIP e extraia os arquivos):
   ```bash
   git clone https://github.com/SEU_USUARIO/SEU_REPOSITORIO.git
   cd SEU_REPOSITORIO
   ```

2. **Crie a pasta de regras YARA**:
   Na pasta do projeto, crie uma subpasta chamada `rules`:
   ```bash
   mkdir rules
   ```

3. **Adicione as regras YARA**:
   - Baixe arquivos de regras `.yar` de reposit√≥rios confi√°veis (como [signature-base](https://github.com/Neo23x0/signature-base)).
   - Crie um arquivo `rules/index.yar` com as inclus√µes das regras baixadas. Exemplo:
     ```yara
     include "GEN_Ransomware.yar"
     include "Crime_Generic.yar"
     ```

4. **Instale as depend√™ncias**:
   Execute o comando abaixo no terminal:
   ```bash
   pip install psutil yara-python requests watchdog regex customtkinter
   ```

---

## üöÄ Como Executar

### ‚ñ∂Ô∏è Execu√ß√£o Manual (Para Testes)
Para iniciar o monitoramento em tempo real:
```bash
python gui.py
```

### ‚öôÔ∏è Instala√ß√£o como Servi√ßo (Recomendado)
Para que a ferramenta inicie automaticamente com o Windows:
```bash
python instalar_servico.py
```
Isso registra a ferramenta no Agendador de Tarefas do Windows, garantindo monitoramento cont√≠nuo com privil√©gios m√°ximos.

### üìù Customizar Arquivos Isca (Opcional)
- Abra o arquivo `porao.py`.
- Edite a lista `CANARY_FILES` com os arquivos/diret√≥rios que deseja usar como isca.
- Os arquivos ser√£o criados automaticamente na primeira execu√ß√£o, caso n√£o existam.

---

## üöÄ Compilando para .exe (Instalador Final)

### Passo 1: Instalar Pr√©-requisitos
- **PyInstaller**: Para empacotar o c√≥digo Python:
  ```bash
  pip install pyinstaller
  ```
- **Inno Setup**: Baixe e instale no site oficial: [jrsoftware.org](https://jrsoftware.org).

### Passo 2: Ajustar o Script `gui.py`
Substitua o trecho `if __name__ == "__main__":` no final do `gui.py` por:
```python
if __name__ == "__main__":
    import sys
    if "--background-service" in sys.argv:
        monitor = PoraoMonitor()
        monitor.start_monitoring()
    else:
        app = App()
        app.mainloop()
```

### Passo 3: Compilar com PyInstaller
Na pasta raiz do projeto, execute:
```bash
pyinstaller --noconsole --name="PoraoAntiRansomware" --add-data="rules;rules" gui.py
```
Isso gera a pasta `dist\PoraoAntiRansomware` com o programa compilado.

### Passo 4: Criar o Script do Instalador (`instalador.iss`)
Crie um arquivo `instalador.iss` na pasta raiz com o seguinte conte√∫do:
```text
[Setup]
AppName=Por√£o Anti-Ransomware
AppVersion=1.0
AppPublisher=Seu Nome
DefaultDirName={autopf}\PoraoAntiRansomware
DefaultGroupName=Por√£o Anti-Ransomware
AllowNoIcons=yes
OutputDir=.\release
OutputBaseFilename=PoraoAntiRansomware_Setup
Compression=lzma
SolidCompression=yes
WizardStyle=modern
PrivilegesRequired=admin

[Languages]
Name: "portuguese"; MessagesFile: "compiler:Languages\Portuguese.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "dist\PoraoAntiRansomware\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs

[Icons]
Name: "{group}\Por√£o Anti-Ransomware"; Filename: "{app}\PoraoAntiRansomware.exe"
Name: "{autodesktop}\Por√£o Anti-Ransomware"; Filename: "{app}\PoraoAntiRansomware.exe"; Tasks: desktopicon

[Run]
Filename: "schtasks"; Parameters: "/Create /SC ONSTART /TN ""MonitorPoraoAntiRansomware"" /TR ""'{app}\PoraoAntiRansomware.exe' --background-service"" /RU SYSTEM /RL HIGHEST /F"; Flags: runhidden

[UninstallRun]
Filename: "schtasks"; Parameters: "/Delete /TN ""MonitorPoraoAntiRansomware"" /F"; Flags: runhidden
```

### Passo 5: Gerar o Instalador
- Clique com o bot√£o direito em `instalador.iss` e selecione "Compile" no Inno Setup.
- O instalador `PoraoAntiRansomware_Setup.exe` ser√° gerado na pasta `release`.

---

## ‚ö†Ô∏è Aviso Legal

- Esta ferramenta encerra processos cr√≠ticos ‚Äî **use com responsabilidade**.
- Requer privil√©gios de Administrador para instala√ß√£o e execu√ß√£o.
- Desenvolvida para fins educacionais e de defesa cibern√©tica.
- O uso indevido √© de responsabilidade exclusiva do usu√°rio.
- **Proibida qualquer forma de venda ou comercializa√ß√£o** deste projeto.

---

## üìö Como Funciona: Filosofia de Defesa em Profundidade

O Por√£o Anti-Ransomware opera com uma abordagem h√≠brida, combinando:

1. **Vigil√¢ncia Proativa**:
   - Monitora processos com `psutil` em alta frequ√™ncia (0,05s).
   - Neutraliza amea√ßas no momento da execu√ß√£o, antes de qualquer dano.

2. **Detec√ß√£o Reativa**:
   - Usa `watchdog` para monitorar eventos de arquivos em tempo real.
   - Responde instantaneamente a modifica√ß√µes suspeitas, como em arquivos isca.

3. **Sistema de Snapshot**:
   - Armazena o estado seguro dos arquivos para identificar altera√ß√µes maliciosas.
   - Permite remedia√ß√£o completa, movendo arquivos afetados para quarentena.

4. **Protocolo de Resposta Unificado**:
   - Centraliza a resposta com a fun√ß√£o `encerrar_proctree()`, garantindo neutraliza√ß√£o e limpeza completas.

---

## ü§ù Contribui√ß√µes

Contribui√ß√µes s√£o bem-vindas! Para sugerir melhorias ou relatar bugs:
1. Fork este reposit√≥rio.
2. Crie uma branch para sua feature (`git checkout -b feature/nova-funcionalidade`).
3. Fa√ßa commit das suas altera√ß√µes (`git commit -m 'Adiciona nova funcionalidade'`).
4. Envie para o reposit√≥rio remoto (`git push origin feature/nova-funcionalidade`).
5. Abra um Pull Request.

---

## üìú Licen√ßa

Este projeto √© de autoria exclusiva do desenvolvedor e n√£o pode ser comercializado. Para mais detalhes, consulte o arquivo `LICENSE`.